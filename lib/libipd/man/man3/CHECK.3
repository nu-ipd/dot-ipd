.\" Manual page for ipd.h
.TH CHECK 3 "October 25, 2020" "libipd 2020.3.6" "IPD"
.\"
.SH NAME
.BR CHECK ", " CHECK_CHAR ", " CHECK_INT ", "
.BR CHECK_UINT ", " CHECK_SIZE ", " CHECK_DOUBLE ", "
.BR CHECK_STRING ", " CHECK_POINTER
\- simple unit testing
.\"
.SH SYNOPSIS
.B "#include <ipd.h>"
.PP
\fBCHECK\fR( \fIbool_expression\fR );
.PP
\fBCHECK_CHAR\fR( \fIchar_expression\fR, \fIchar_expression\fR );
.PP
\fBCHECK_INT\fR( \fIint_expression\fR, \fIint_expression\fR );
.PP
\fBCHECK_UINT\fR( \fIunsigned_expression\fR, \fIunsigned_expression\fR );
.PP
\fBCHECK_SIZE\fR( \fIsize_expression\fR, \fIsize_expression\fR );
.PP
\fBCHECK_STRING\fR( \fIstring_expression\fR, \fIstring_expression\fR );
.PP
\fBCHECK_POINTER\fR( \fIptr_expression\fR, \fIptr_expression\fR );
.\"
.SH DESCRIPTION
Each of these macros asserts the truth of some condition, registering
a passed test if the condition is true, or a failed test if the
condition is false. They also register an exit handler, in order to
print a summary of the test results on program exit.
.PP
The first macro form,
.BR CHECK (),
takes the condition that is expected to hold as its only argument. The
test passes if the argument expression evaluates to a true value.
.PP
The remaining forms perform comparisons between the values of two
expressions; except for
.BR CHECK_STRING (),
they succeed when the values are equal. When a
comparison test fails, it prints the two values that differed
unexpectedly. For example, to test a factorial function \fIfact\fR,
you could write
.PP
.in +4n
.nf
.EX
\fBCHECK_UINT\fR( \fIfact\fR(5), 120 );
.EE
.fi
.in
.PP
The
.BR CHECK_STRING ()
form does not compare the pointer values it is given, but the
string objects they point to.
It expects to receive valid pointers to 0-terminated \fIchar\fR arrays,
which it compares using
.BR strcmp (3).
A test passes when the pointers are both non-NULL and point to equal
strings. NULL pointers passed to
.BR CHECK_STRING ()
do not result in undefined behavior, because it checks for NULL before
dereferencing them; however, NULLs are considered a failed test. To
check a value that you expect to be NULL, use
.BR CHECK_POINTER ().
.\"
.SH ERRORS
Each argument to the
.BR CHECK_STRING ()
form must evaluate either to a pointer to a 0-terminated \fIchar\fR
array or to a NULL pointer. If given a non-null pointer that
doesn\(aqt point to a valid C-style string, its behavior is undefined.
.\"
.SH BUGS
The
.BR CHECK_INT ()
and
.BR CHECK_UINT ()
macros also work on types \fBlong\fR and
\fBunsigned long\fR.
.\"
.SH AUTHOR
Jesse Tov <\fIjesse@cs\.northwestern\.edu\fR>
.\"
.SH SEE ALSO
.BR CHECK (3),
.BR assert (3),
.BR strcmp (3)
